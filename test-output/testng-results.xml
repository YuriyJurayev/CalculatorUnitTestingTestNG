<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="27" ignored="0" total="94" passed="67">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="111" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
    <groups>
      <group name="group 2">
        <method signature="SumCalculatorTest.testSum1(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="testSum1" class="com.epam.unittesting.tests.SumCalculatorTest"/>
      </group> <!-- group 2 -->
      <group name="group 1">
        <method signature="SumCalculatorTest.testSum(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="testSum" class="com.epam.unittesting.tests.SumCalculatorTest"/>
      </group> <!-- group 1 -->
    </groups>
    <test name="testMultiplication" duration-ms="47" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.MultCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="setUp" is-config="true" duration-ms="9" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="multTest" duration-ms="4" started-at="2017-10-30T14:02:44Z" data-provider="multLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[160]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="tearDown" is-config="true" duration-ms="6" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.MultCalculatorTest@3cd1f1c8]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
      </class> <!-- com.epam.unittesting.tests.MultCalculatorTest -->
      <class name="com.epam.unittesting.tests.MultDoubleCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of multiplication:  expected [2.2] but found [2.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of multiplication:  expected [2.2] but found [2.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.MultDoubleCalculatorTest.multTest(MultDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="FAIL" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30.25]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of multiplication:  expected [30.25] but found [30.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of multiplication:  expected [30.25] but found [30.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.MultDoubleCalculatorTest.multTest(MultDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-151]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="FAIL" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.78]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[22.8006]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of multiplication:  expected [22.8006] but found [22.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of multiplication:  expected [22.8006] but found [22.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.MultDoubleCalculatorTest.multTest(MultDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="FAIL" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of multiplication:  expected [4.77] but found [4.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of multiplication:  expected [4.77] but found [4.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.MultDoubleCalculatorTest.multTest(MultDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="multTest" duration-ms="2" started-at="2017-10-30T14:02:44Z" data-provider="multDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.MultDoubleCalculatorTest@3a4afd8d]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.MultDoubleCalculatorTest -->
    </test> <!-- testMultiplication -->
    <test name="testSqrt" duration-ms="40" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.SqrtCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="setUp" is-config="true" duration-ms="9" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[49]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="sqrtTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sqrt" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-49]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SqrtCalculatorTest@6c629d6e]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.SqrtCalculatorTest -->
    </test> <!-- testSqrt -->
    <test name="testTg" duration-ms="2" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.TgCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.TgCalculatorTest@29444d75]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.TgCalculatorTest@29444d75]" name="tgTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="tg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method status="FAIL" signature="tgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.TgCalculatorTest@29444d75]" name="tgTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="tg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5774]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of tangent:  expected [0.5774] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of tangent:  expected [0.5774] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.TgCalculatorTest.tgTest(TgCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.TgCalculatorTest@29444d75]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="tgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.TgCalculatorTest@29444d75]" name="tgTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="tg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7321]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of tangent:  expected [1.7321] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of tangent:  expected [1.7321] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.TgCalculatorTest.tgTest(TgCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
      </class> <!-- com.epam.unittesting.tests.TgCalculatorTest -->
    </test> <!-- testTg -->
    <test name="testSum" duration-ms="50" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.SumCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="setUp" is-config="true" duration-ms="8" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="testSum" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sumLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="beforeGroup()[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="beforeGroup" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeGroup -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="testSum" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="testSum" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method name="testSum1" signature="testSum1(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" depends-on-groups="group 1" status="PASS" duration-ms="0" finished-at="2017-10-30T14:02:44Z" started-at="2017-10-30T14:02:44Z" depends-on-methods="com.epam.unittesting.tests.SumCalculatorTest.testSum" data-provider="sumLong1">
          <params>
            <param index="0">
              <value>
                <![CDATA[214]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[305]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[519]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum1 -->
        <test-method status="PASS" signature="beforeGroup()[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="beforeGroup" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeGroup -->
        <test-method name="testSum1" signature="testSum1(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" depends-on-groups="group 1" status="PASS" duration-ms="3" finished-at="2017-10-30T14:02:44Z" started-at="2017-10-30T14:02:44Z" depends-on-methods="com.epam.unittesting.tests.SumCalculatorTest.testSum" data-provider="sumLong1">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum1 -->
        <test-method name="testSum1" signature="testSum1(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" depends-on-groups="group 1" status="PASS" duration-ms="1" finished-at="2017-10-30T14:02:44Z" started-at="2017-10-30T14:02:44Z" depends-on-methods="com.epam.unittesting.tests.SumCalculatorTest.testSum" data-provider="sumLong1">
          <params>
            <param index="0">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SumCalculatorTest@71bc1ae4]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.SumCalculatorTest -->
      <class name="com.epam.unittesting.tests.SumDoubleCalculatorTest">
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[214.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[305.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[520]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[44.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-60.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44.9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[28.9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[44.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[44.7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[60.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="FAIL" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sum: expected [-28.7] but found [-28.700000000000003]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sum: expected [-28.7] but found [-28.700000000000003]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SumDoubleCalculatorTest.sumDoubleTest(SumDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="FAIL" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sum: expected [-28.8] but found [-28.799999999999997]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sum: expected [-28.8] but found [-28.799999999999997]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SumDoubleCalculatorTest.sumDoubleTest(SumDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="FAIL" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sum: expected [-28.2] but found [-28.200000000000003]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sum: expected [-28.2] but found [-28.200000000000003]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SumDoubleCalculatorTest.sumDoubleTest(SumDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="FAIL" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sum: expected [-28.3] but found [-28.299999999999997]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sum: expected [-28.3] but found [-28.299999999999997]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SumDoubleCalculatorTest.sumDoubleTest(SumDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="FAIL" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sum: expected [-28.1] but found [-28.700000000000003]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sum: expected [-28.1] but found [-28.700000000000003]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SumDoubleCalculatorTest.sumDoubleTest(SumDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="sumDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sumDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-44.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SumDoubleCalculatorTest@2437c6dc]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.SumDoubleCalculatorTest -->
    </test> <!-- testSum -->
    <test name="testCos" duration-ms="3" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.CosCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.CosCalculatorTest@5479e3f]" name="setUp" is-config="true" duration-ms="2" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.unittesting.tests.CosCalculatorTest@5479e3f]" name="cosTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="cos" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.54030230586814]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cos:  expected [0.54030230586814] but found [0.01745240643728351]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cos:  expected [0.54030230586814] but found [0.01745240643728351]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.CosCalculatorTest.cosTest(CosCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.CosCalculatorTest@5479e3f]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.unittesting.tests.CosCalculatorTest@5479e3f]" name="cosTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="cos" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.96496602849211]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cos:  expected [0.96496602849211] but found [0.766044443118978]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cos:  expected [0.96496602849211] but found [0.766044443118978]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.CosCalculatorTest.cosTest(CosCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
      </class> <!-- com.epam.unittesting.tests.CosCalculatorTest -->
    </test> <!-- testCos -->
    <test name="testCtg" duration-ms="3" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.CtgCalculatorTest">
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.CtgCalculatorTest@65e579dc]" name="ctgTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="ctg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.732]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of ctangent:  expected [1.732] but found [0.4804727781564516]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of ctangent:  expected [1.732] but found [0.4804727781564516]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.CtgCalculatorTest.ctgTest(CtgCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.CtgCalculatorTest@65e579dc]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.CtgCalculatorTest@65e579dc]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.CtgCalculatorTest@65e579dc]" name="ctgTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="ctg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.577]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of ctangent:  expected [0.577] but found [0.7807144353592677]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of ctangent:  expected [0.577] but found [0.7807144353592677]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.CtgCalculatorTest.ctgTest(CtgCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.unittesting.tests.CtgCalculatorTest@65e579dc]" name="ctgTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="ctg" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of ctangent:  expected [1.0] but found [0.6557942026326724]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of ctangent:  expected [1.0] but found [0.6557942026326724]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.CtgCalculatorTest.ctgTest(CtgCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
      </class> <!-- com.epam.unittesting.tests.CtgCalculatorTest -->
    </test> <!-- testCtg -->
    <test name="testDivision" duration-ms="51" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.DivDoubleCalculatorTest">
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-150]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[151]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22.8006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.78]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="FAIL" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of division:  expected [0.0] but found [Infinity]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of division:  expected [0.0] but found [Infinity]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.DivDoubleCalculatorTest.divTest(DivDoubleCalculatorTest.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="FAIL" signature="divTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of division:  expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of division:  expected [0.0] but found [NaN]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.DivDoubleCalculatorTest.divTest(DivDoubleCalculatorTest.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.DivDoubleCalculatorTest@198e2867]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.DivDoubleCalculatorTest -->
      <class name="com.epam.unittesting.tests.DivCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="setUp" is-config="true" duration-ms="8" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[160]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-150]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-150]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="6" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="divTest" duration-ms="5" started-at="2017-10-30T14:02:44Z" data-provider="divLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.DivCalculatorTest@2a098129]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.DivCalculatorTest -->
    </test> <!-- testDivision -->
    <test name="testSin" duration-ms="1" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.SinCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SinCalculatorTest@46f5f779]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SinCalculatorTest@46f5f779]" name="sinTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="sin" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7071067811865475]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SinCalculatorTest@46f5f779]" name="sinTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sin" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SinCalculatorTest@46f5f779]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.unittesting.tests.SinCalculatorTest@46f5f779]" name="sinTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="sin" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8660254037844386]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
      </class> <!-- com.epam.unittesting.tests.SinCalculatorTest -->
    </test> <!-- testSin -->
    <test name="testPow" duration-ms="47" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.PowCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="setUp" is-config="true" duration-ms="8" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="11" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="powTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="pow" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.PowCalculatorTest@567d299b]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.PowCalculatorTest -->
    </test> <!-- testPow -->
    <test name="testIsPositive" duration-ms="2" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.IsPositiveCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.IsPositiveCalculatorTest@4f4a7090]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="isPositiveTest(long)[pri:0, instance:com.epam.unittesting.tests.IsPositiveCalculatorTest@4f4a7090]" name="isPositiveTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="isPositive" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.epam.unittesting.tests.IsPositiveCalculatorTest.isPositiveTest(IsPositiveCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method status="PASS" signature="isPositiveTest(long)[pri:0, instance:com.epam.unittesting.tests.IsPositiveCalculatorTest@4f4a7090]" name="isPositiveTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="isPositive" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method status="FAIL" signature="isPositiveTest(long)[pri:0, instance:com.epam.unittesting.tests.IsPositiveCalculatorTest@4f4a7090]" name="isPositiveTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="isPositive" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.epam.unittesting.tests.IsPositiveCalculatorTest.isPositiveTest(IsPositiveCalculatorTest.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.IsPositiveCalculatorTest@4f4a7090]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.IsPositiveCalculatorTest -->
    </test> <!-- testIsPositive -->
    <test name="testIsNegative" duration-ms="2" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.IsNegativeCalculatorTest">
        <test-method status="FAIL" signature="isNegativeTest(long)[pri:0, instance:com.epam.unittesting.tests.IsNegativeCalculatorTest@12bc6874]" name="isNegativeTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="isNegative" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.epam.unittesting.tests.IsNegativeCalculatorTest.isNegativeTest(IsNegativeCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.IsNegativeCalculatorTest@12bc6874]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="isNegativeTest(long)[pri:0, instance:com.epam.unittesting.tests.IsNegativeCalculatorTest@12bc6874]" name="isNegativeTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="isNegative" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.epam.unittesting.tests.IsNegativeCalculatorTest.isNegativeTest(IsNegativeCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
        <test-method status="PASS" signature="isNegativeTest(long)[pri:0, instance:com.epam.unittesting.tests.IsNegativeCalculatorTest@12bc6874]" name="isNegativeTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="isNegative" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.IsNegativeCalculatorTest@12bc6874]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.IsNegativeCalculatorTest -->
    </test> <!-- testIsNegative -->
    <test name="testSubtraction" duration-ms="46" started-at="2017-10-30T08:02:44Z" finished-at="2017-10-30T08:02:44Z">
      <class name="com.epam.unittesting.tests.SubCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="setUp" is-config="true" duration-ms="9" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="subTest" duration-ms="2" started-at="2017-10-30T14:02:44Z" data-provider="subLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="subTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="subTest" duration-ms="7" started-at="2017-10-30T14:02:44Z" data-provider="subLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="subTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="subTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="subTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="subTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="subTest(long, long, long)[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="subTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="subLong" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SubCalculatorTest@4f47d241]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.SubCalculatorTest -->
      <class name="com.epam.unittesting.tests.SubDoubleCalculatorTest">
        <test-method status="PASS" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[214.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[305.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-91]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="setUp" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="1" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="FAIL" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of subtraction:  expected [36.1] but found [36.099999999999994]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of subtraction:  expected [36.1] but found [36.099999999999994]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SubDoubleCalculatorTest.subDoubleTest(SubDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="FAIL" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36.4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of subtraction:  expected [36.4] but found [36.400000000000006]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of subtraction:  expected [36.4] but found [36.400000000000006]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SubDoubleCalculatorTest.subDoubleTest(SubDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="PASS" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25.34]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50.11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="FAIL" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36.6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of subtraction:  expected [36.6] but found [36.599999999999994]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of subtraction:  expected [36.6] but found [36.599999999999994]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SubDoubleCalculatorTest.subDoubleTest(SubDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="FAIL" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36.01]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of subtraction:  expected [36.01] but found [36.010000000000005]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of subtraction:  expected [36.01] but found [36.010000000000005]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SubDoubleCalculatorTest.subDoubleTest(SubDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="FAIL" signature="subDoubleTest(double, double, double)[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="subDoubleTest" duration-ms="0" started-at="2017-10-30T14:02:44Z" data-provider="subDouble" finished-at="2017-10-30T14:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36.9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of subtraction:  expected [36.9] but found [36.900000000000006]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of subtraction:  expected [36.9] but found [36.900000000000006]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at com.epam.unittesting.tests.SubDoubleCalculatorTest.subDoubleTest(SubDoubleCalculatorTest.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subDoubleTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.unittesting.tests.SubDoubleCalculatorTest@4c3e4790]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-30T14:02:44Z" finished-at="2017-10-30T14:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.unittesting.tests.SubDoubleCalculatorTest -->
    </test> <!-- testSubtraction -->
  </suite> <!-- Suite -->
</testng-results>
